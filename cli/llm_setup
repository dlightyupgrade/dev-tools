#!/bin/bash
# Setup script for Local LLM Git Tools
#
# This script checks dependencies and installs required components
# for the Local LLM Git Assistant tools.

set -e

# ANSI color codes
BLUE="\033[94m"
GREEN="\033[92m"
YELLOW="\033[93m"
RED="\033[91m"
ENDC="\033[0m"
BOLD="\033[1m"

echo -e "${BLUE}${BOLD}Local LLM Git Tools Setup${ENDC}"
echo ""

# Check if Python is installed
echo -e "${BLUE}Checking for Python...${ENDC}"
if ! command -v python3 &> /dev/null; then
  echo -e "${RED}Error: Python 3 is not installed.${ENDC}"
  echo -e "${YELLOW}Please install Python 3 and try again.${ENDC}"
  exit 1
else
  PYTHON_VERSION=$(python3 --version)
  echo -e "${GREEN}✓ $PYTHON_VERSION found${ENDC}"
fi

# Check for pip and install requests if needed
echo -e "${BLUE}Checking for pip...${ENDC}"
if ! command -v pip3 &> /dev/null; then
  echo -e "${RED}Error: pip3 is not installed.${ENDC}"
  echo -e "${YELLOW}Please install pip3 and try again.${ENDC}"
  exit 1
else
  echo -e "${GREEN}✓ pip3 found${ENDC}"
  
  echo -e "${BLUE}Installing required Python packages...${ENDC}"
  pip3 install requests
  echo -e "${GREEN}✓ Python dependencies installed${ENDC}"
fi

# Check if Git is installed
echo -e "${BLUE}Checking for Git...${ENDC}"
if ! command -v git &> /dev/null; then
  echo -e "${RED}Error: Git is not installed.${ENDC}"
  echo -e "${YELLOW}Please install Git and try again.${ENDC}"
  exit 1
else
  GIT_VERSION=$(git --version)
  echo -e "${GREEN}✓ $GIT_VERSION found${ENDC}"
fi

# Check if GitHub CLI is installed
echo -e "${BLUE}Checking for GitHub CLI...${ENDC}"
if ! command -v gh &> /dev/null; then
  echo -e "${YELLOW}Warning: GitHub CLI (gh) is not installed.${ENDC}"
  echo -e "${YELLOW}The llm_pr tool requires GitHub CLI to create PRs.${ENDC}"
  echo -e "${YELLOW}Install it from: https://cli.github.com/${ENDC}"
else
  GH_VERSION=$(gh --version | head -n 1)
  echo -e "${GREEN}✓ $GH_VERSION found${ENDC}"
fi

# Check if Ollama is installed
echo -e "${BLUE}Checking for Ollama...${ENDC}"
if ! command -v ollama &> /dev/null; then
  echo -e "${RED}Error: Ollama is not installed.${ENDC}"
  echo -e "${YELLOW}Please install Ollama from: https://ollama.ai/${ENDC}"
  exit 1
else
  echo -e "${GREEN}✓ Ollama found${ENDC}"
fi

# Check if Ollama is running
echo -e "${BLUE}Checking if Ollama server is running...${ENDC}"
if ! curl -s http://localhost:11434/api/tags &>/dev/null; then
  echo -e "${YELLOW}Warning: Ollama server is not running.${ENDC}"
  echo -e "${YELLOW}Start it with: 'ollama serve'${ENDC}"
  echo -e "${YELLOW}Starting Ollama service...${ENDC}"
  
  # Try to start Ollama service
  nohup ollama serve &>/dev/null &
  sleep 2
  
  if ! curl -s http://localhost:11434/api/tags &>/dev/null; then
    echo -e "${RED}Failed to start Ollama service.${ENDC}"
    echo -e "${YELLOW}Please start it manually with: 'ollama serve'${ENDC}"
  else
    echo -e "${GREEN}✓ Ollama service started${ENDC}"
  fi
else
  echo -e "${GREEN}✓ Ollama service is running${ENDC}"
fi

# Check for required models
echo -e "${BLUE}Checking for required Ollama models...${ENDC}"
MODELS=$(curl -s http://localhost:11434/api/tags | grep -o '"name":"[^"]*' | sed 's/"name":"//')

if ! echo "$MODELS" | grep -q "phi3:mini"; then
  echo -e "${YELLOW}Default model phi3:mini not found. Would you like to download it? (y/n)${ENDC}"
  read -r download_phi3
  if [[ "$download_phi3" =~ ^[Yy]$ ]]; then
    echo -e "${BLUE}Downloading phi3:mini model (this may take a while)...${ENDC}"
    ollama pull phi3:mini
    echo -e "${GREEN}✓ phi3:mini model downloaded${ENDC}"
  fi
else
  echo -e "${GREEN}✓ phi3:mini model is available${ENDC}"
fi

echo ""
echo -e "${GREEN}${BOLD}Setup complete!${ENDC}"
echo ""
echo -e "You can now use the following commands:"
echo -e "  ${BOLD}llm_commit${ENDC} - Generate commit messages with local LLM"
echo -e "  ${BOLD}llm_pr${ENDC} - Generate PR descriptions with local LLM"
echo ""
echo -e "Try them with the --help flag to see all options:"
echo -e "  ${BOLD}llm_commit --help${ENDC}"
echo -e "  ${BOLD}llm_pr --help${ENDC}"